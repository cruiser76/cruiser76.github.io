{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","todo","done","className","SearchPanel","state","term","onChangeSearch","evt","target","value","setState","props","type","onChange","this","placeholder","Component","TodoListItem","title","onDeleted","onToggleDone","onToggleImportant","important","classNames","onClick","TodoList","todos","elements","map","el","id","otherProps","visible","key","ItemStatusFilter","buttons","name","label","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAddItem","App","_maxId","todoData","_createTodoItem","deleteItem","idx","findIndex","todoDataCopy","slice","splice","addItem","text","newArr","push","_toggleProperty","console","log","arr","propName","arrCopy","newObj","items","toLowerCase","includes","visibleItem","_filters","_search","doneCount","length","todoCount","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.4b277831.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({todo, done}) => {\r\n  return (\r\n  <div className=\"app-header d-flex\"> \r\n    <h1>My Todo List</h1>\r\n    <h2>{todo} more to do, {done} done</h2>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      term: ``\r\n    };\r\n\r\n    this.onChangeSearch = (evt) => {\r\n      const term = evt.target.value;\r\n      this.setState({term});\r\n      this.props.onChangeSearch(term);\r\n    };\r\n  }\r\n    \r\n  render() {\r\n    \r\n    return (<input type=\"text\" \r\n                   className=\"form-control search-input\"\r\n                   onChange = {this.onChangeSearch} \r\n                   placeholder=\"type to search\" \r\n                   value = {this.state.term} />);\r\n  };\r\n};\r\n","import TodoListItem from './todo-list-item';\r\nexport default TodoListItem;\r\n","import React, {Component} from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n \r\n  //рендер создает и возвращает реакт компонент так же как и функция, но в классе можно хранить состояния объекта\r\n  render() {\r\n    const {title, onDeleted, onToggleDone, onToggleImportant, important, done} = this.props;\r\n\r\n    let classNames = `todo-list-item${done ? ` done` : ``}${important ? ` important` : ``}`;\r\n      \r\n    return (\r\n      <span className={classNames}>\r\n        <span className=\"todo-list-item-label\" onClick = {onToggleDone}>\r\n          {title}\r\n        </span>\r\n  \r\n        <button onClick={onToggleImportant} type=\"button\" className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n  \r\n        \r\n        <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\" onClick={onDeleted}>\r\n            <i className=\"far fa-trash-alt\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n};","import TodoList from './todo-list';\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n\r\n  //реакту при создании однотипных элементов из массива нужны уникальные ключи для быстродействия \r\n  const elements = todos.map((el) => {\r\n    // деструктурируем объект переданный в качестве элемента массива, заберем id, остальные свойства записываем в рест\r\n    const {id, visible, ...otherProps} = el;\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem \r\n        {...otherProps}\r\n         onDeleted = {() => onDeleted(id)}\r\n         onToggleImportant = {() => onToggleImportant(id)}\r\n         onToggleDone = {() => onToggleDone(id)}\r\n         />\r\n      </li>\r\n    );\r\n  });\r\n  \r\n  return (\r\n  <ul className=\"list-group todo-list\">\r\n    {elements}\r\n  </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList","import ItemStatusFilter from './item-status-filter';\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n  constructor() {\r\n    super();\r\n    this.buttons = [\r\n      {name: `all`, label: `All`},\r\n      {name: `active`, label: `Active`},\r\n      {name: `done`, label: `Done`}\r\n    ]\r\n  }\r\n\r\n  render() {// возвращает реакт компонент как функция, только класс\r\n    const {filter, onFilterChange} = this.props;\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? `btn-info` : `btn-outline-secondary`;\r\n      return (\r\n        <button type = \"button\"\r\n                className = {`btn ${clazz}`}\r\n                key = {name}\r\n                onClick = {() => onFilterChange(name)}>\r\n          {label}\r\n        </button>\r\n      );\r\n    })\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n} \r\n","import ItemAddForm from './item-add-form';\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      label: ``\r\n    };\r\n\r\n    this.onLabelChange = (evt) => {\r\n      this.setState({label: evt.target.value});\r\n    };\r\n\r\n    this.onSubmit = (evt) => {\r\n      evt.preventDefault();\r\n      this.props.onAddItem(this.state.label);\r\n      this.setState({label: ``});\r\n    }\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <form className=\"item-add-button  d-flex\"\r\n            onSubmit = {this.onSubmit} >\r\n        <input type=\"text\"\r\n               className = \"form-control\"\r\n               onChange = {this.onLabelChange}\r\n               placeholder = \"What needs to be done\" \r\n               value = {this.state.label} />\r\n\r\n        <button className=\"btn btn-outline-secondary\">Add Item</button>\r\n      </form>\r\n    );\r\n  }\r\n}","import App from './app';\r\nexport default App;","import React, {Component} from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this._maxId = 100;\r\n\r\n    this.state = {\r\n      todoData: [\r\n        this._createTodoItem(`Drink Coffee`),\r\n        this._createTodoItem(`Make Awesome App`),\r\n        this._createTodoItem(`Have a lunch`),\r\n      ],\r\n      term: ``,\r\n      filter: `all` //all, active, done\r\n    };\r\n\r\n    this.deleteItem = (id) => {\r\n      this.setState(({todoData}) => {\r\n        const idx = todoData.findIndex((el) => el.id === id);\r\n        const todoDataCopy = todoData.slice(); // создаем копию массива из стэйт, чтобы не менять существующий стэйт\r\n        todoDataCopy.splice(idx, 1);\r\n        return {\r\n          todoData: todoDataCopy,\r\n        }\r\n      });\r\n    };\r\n\r\n    this.addItem = (text) => {\r\n      this.setState(({todoData}) => {\r\n        const newArr = todoData.slice();\r\n        newArr.push(this._createTodoItem(text));\r\n        return {\r\n          todoData: newArr\r\n        }\r\n      });\r\n    };\r\n\r\n    this.onToggleImportant = (id) => {\r\n      this.setState(({todoData}) => {\r\n        return {todoData: this._toggleProperty(todoData, id, `important`)};\r\n      });\r\n    };\r\n\r\n    this.onToggleDone = (id) => {\r\n      console.log(id);\r\n      this.setState(({todoData}) => {\r\n        return {todoData: this._toggleProperty(todoData, id, `done`)};\r\n      });\r\n    };\r\n\r\n    this.onChangeSearch = (term) => {\r\n      this.setState({term});\r\n    }\r\n\r\n    this.onFilterChange = (filter) => {\r\n      this.setState({filter});\r\n    }\r\n  }\r\n\r\n  _toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const arrCopy = arr.slice(); // создаем копию массива из стэйт, чтобы не менять существующий стэйт\r\n    const newObj = {...arr[idx], [propName]: !arr[idx][propName]};// создаем копию объекта\r\n    arrCopy.splice(idx, 1, newObj);\r\n    return arrCopy;\r\n  }\r\n\r\n  _createTodoItem(title) {\r\n    return {title, important: false, id: this._maxId++, done: false, visible: true};\r\n  }\r\n\r\n  _search(items, term) {\r\n    return items.filter((el) => {\r\n      return el.title.toLowerCase().includes(term.toLowerCase());\r\n    }) \r\n  }\r\n\r\n  _filters(items, filter) {\r\n    switch(filter) {\r\n      case `all`:\r\n        return items;\r\n      case `active`:\r\n        return items.filter((el) => !el.done);\r\n      case `done`:\r\n          return items.filter((el) => el.done);\r\n      default: \r\n        return items;   \r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {todoData, term, filter} = this.state;\r\n    const visibleItem = this._filters(this._search(todoData, term), filter);\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        \r\n        <AppHeader todo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onChangeSearch = {this.onChangeSearch}/>\r\n          <ItemStatusFilter filter = {filter} onFilterChange = {this.onFilterChange} />\r\n        </div>\r\n        \r\n        <TodoList \r\n        todos={visibleItem}  \r\n        onDeleted = {this.deleteItem}\r\n        onToggleDone = {this.onToggleDone} \r\n        onToggleImportant = {this.onToggleImportant}\r\n        />\r\n        <ItemAddForm onAddItem = {this.addItem}/>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/app'\n\nReactDom.render(<App />, document.querySelector(`#root`));"],"sourceRoot":""}